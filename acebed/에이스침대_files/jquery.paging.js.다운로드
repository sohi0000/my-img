/*!************************************************************************************
 * jQuery Paging 0.2.1
 * by composite (ukjinplant@msn.com)
 * http://hazard.kr
 * This project licensed under a MIT License.
 **************************************************************************************/;
!function($){

	"use strict";

	//default properties.
	var a=/a/i,defs={
		prnt : "", item : "a", format : "{0}",
		itemDivClass : "number",
		itemClass : "", sideClass : "", className : "",
		itemCurrent : "on", length : 10, max : 1, current : 1, append : false,
		href : "#{0}", event : true,
		first : "<img src=\"http://acebed.easymedia.kr/common/images/paging-first-prev-on.png\" alt=\"\" />",
		prev : "<img src=\"http://acebed.easymedia.kr/common/images/paging-prev-on.png\" alt=\"\" />",
		next : "<img src=\"http://acebed.easymedia.kr/common/images/paging-next-on.png\" alt=\"\" />",
		last : "<img src=\"http://acebed.easymedia.kr/common/images/paging-last-next-on.png\" alt=\"\" />"
	},
	format = function(str){
		var arg=arguments;

		return str.replace(/\{(\d+)}/g, function(m,d){
			if (+d<0)
			{
				return m;
			}
			else
			{
				return arg[+d+1] || "";
			}
		});
	},
	item,
	make = function(op, page, cls, str){
		item = document.createElement(op.item);

		switch (str)
		{
			case op.prev :
				item.className = "prev ";
				break;
			case op.next :
				item.className = "next ";
				break;
			case op.first :
				item.className = "prev_first ";
				break;
			case op.last :
				item.className = "next_last ";
				break;
			default :
				break;
		}

		item.className += cls;

		item.innerHTML = format(str, page, op.length, op.start, op.end, op.start - 1, op.end + 1, op.max);

		if (a.test(op.item))
		{
			item.href = format(op.href, page);
		}

		var origin = op.origin;

		// item div안에 담기
		if(op.itemDivClass != "")
		{
			origin = str == op.format ? $(op.origin).find("." + op.itemDivClass) : op.origin;
		}

		if (op.event)
		{
			$(item).bind("click", function(e){
				var fired = true;

				if ($.isFunction(op.onclick))
				{
					fired = op.onclick.call(item, e, page, op);
				}

				if (fired == undefined || fired)
				{
					$(op.origin).paging({current:page});
				}

				return fired;
			}).appendTo(origin);

			//bind event for each elements.
			var ev = "on";

			switch (str)
			{
				case op.prev :
					ev += "prev";
					break;
				case op.next :
					ev += "next";
					break;
				case op.first :
					ev += "first";
					break;
				case op.last :
					ev += "last";
					break;
				default :
					ev += "item";
					break;
			}

			if ($.isFunction(op[ev]))
			{
				op[ev].call(item, page, op);
			}
		}

		return item;
	};

	$.fn.paging = function(op){
		$(this).each(function(){
			if (this.__JQ_PAGING)
			{
				if (op === "destroy")
				{
					$(this).removeClass(this.__JQ_PAGING.className).empty();
					delete this.__JQ_PAGING;
					return true;
				}
				else if(op in this.__JQ_PAGING)
				{
					return this.__JQ_PAGING[op];
				}

				op = $.extend(this.__JQ_PAGING,op||{});$(this).empty();
			}
			else if (op instanceof String || typeof op === "string")
			{
				return false;
			}
			else
			{
				op = $.extend({origin:this},defs,op||{});
				$(this).addClass(op.className).empty();
			}

			if (op.max < 1)
			{
				op.max = 1;
			}

			if (op.current < 1)
			{
				op.current = 1;
			}

			op.start =~~ ((op.current - 1) / op.length) * op.length + 1;
			op.end = op.start - 1 + op.length;

			if (op.end > op.max)
			{
				op.end = op.max;
			}

			if (op.current > op.length)
			{
				if (op.first !== false)
				{
					// first button
					make(op, 1, op.sideClass, op.first);
				}

				// prev button
				make(op, op.start - 1, op.sideClass, op.prev);
			}
			else if (op.current == op.end && op.end != 1)
			{
				// first button
				make(op, 1, op.sideClass, op.first);
			}
			// pages button
			for (var i = op.start; i <= op.end; i++)
			{
				if (i == op.start && op.itemDivClass != "")
				{
					$("<div class='" + op.itemDivClass + "'></div>").appendTo(op.origin);
				}
				
				make(op, i, op.itemClass + (i == op.current ? " " + op.itemCurrent : ""), op.format);
			}

			if (op.current / op.length < op.max / op.length)
			{
				if (op.end < op.max)
				{
					// next button
					make(op, op.end + 1, op.sideClass, op.next);
				}

				if (op.last !== false)
				{
					// last button
					make(op, op.max, op.sideClass, op.last);
				}
			}

			this.__JQ_PAGING=op;
		});
	};
}(jQuery);