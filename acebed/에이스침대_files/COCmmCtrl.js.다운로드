var cmmCtrl = (function(){

	"use strict";

	var fn_replace_null = function(val, chgStr)
	{
		if (val == undefined || val == null)
		{
			return chgStr;
		}
		else
		{
			return val;
		}
	};

	/* Start Progress */
	var fn_start_progress = function()
	{
		var trgtObj = jQuery("#dimdBg");

		trgtObj.stop(true, true).fadeIn(300);

		if (jQuery(".fullPop:visible").length > 0)
		{
			trgtObj.nextAll(".loadBlk").stop(true, true).fadeIn(300);
		}
		else
		{
			trgtObj.next().stop(true, true).fadeIn(300);
		}
	};

	/* End Progress */
	var fn_end_progress = function()
	{
		var trgtObj = jQuery("#dimdBg");

  		if (jQuery(".fullPop:visible").length > 0)
		{
  			trgtObj.nextAll(".loadBlk").stop(true, true).fadeOut(300);
		}
		else
		{
			trgtObj.next().stop(true, true).fadeOut(300);
		}

  		trgtObj.stop(true, true).fadeOut(300);
	};

    /* Ajax Normal */
    var fn_ajax = function(callbackAjax, url, dataType, loading, sync)
    {
        if (typeof dataType == "undefined") {
            dataType = "json";
        }

        if (typeof sync == "undefined") {
            sync = true;
        }

        jQuery.ajax({
            url : url,
            type : "post",
            timeout: 30000,
            dataType : dataType,
            async: sync,
            cache : false,
            beforeSend : function(){
                if (loading) {
                	cmmCtrl.startProgress();
                }
            },
            success : function(data, status, xhr){
                if (callbackAjax) {
                    callbackAjax(data);
                }
            },
            error : function(data, status, xhr){
            	fn_ajax_error(data, status, xhr);
            },
            complete : function(){
                if (loading) {
                	cmmCtrl.endProgress();
                }
            }
        });
    };

    /* Ajax Form Data */
    var fn_ajax_data = function(callbackAjax, url, formObj, dataType, loading, sync)
    {
    	if (typeof dataType == "undefined") {
            dataType = "json";
        }

        if (typeof sync == "undefined") {
            sync = true;
        }

        if (formObj.data("submitFlag") != "Y")
		{
        	jQuery.ajax({
                url : url,
                type : "post",
                timeout: 30000,
                data : formObj.serializeArray(),
                dataType : dataType,
                async: sync,
                cache : false,
                beforeSend : function(){
                	formObj.data("submitFlag", "Y");

                	if (loading) {
                		cmmCtrl.startProgress();
                	}
                },
                success : function(data, status, xhr){
                	formObj.data("submitFlag", "N");

                    if (callbackAjax) {
                        callbackAjax(data);
                    }
                },
              	error : function(data, status, xhr){
                	formObj.data("submitFlag", "N");

                	fn_ajax_error(data, status, xhr);
                },
                complete : function(){
                    if (loading) {
                    	cmmCtrl.endProgress();
                    }
                }
            });
		}
    };

    /* Ajax Param Data */
    var fn_ajax_param_data = function(callbackAjax, url, paramData, dataType, loading, sync)
    {
    	if (typeof dataType == "undefined") {
            dataType = "json";
        }

        if (typeof sync == "undefined") {
            sync = true;
        }

        jQuery.ajax({
            url : url,
            type : "post",
            timeout: 300000,
            data : paramData,
            dataType : dataType,
            async: sync,
            cache : false,
            beforeSend : function() {
                if (loading) {
                	cmmCtrl.startProgress();
                }
            },
            success : function(data, status, xhr) {
                if (callbackAjax) {
                    callbackAjax(data);
                }
            },
            error : function(data, status, xhr) {
            	fn_ajax_error(data, status, xhr);
            },
            complete : function() {
                if (loading) {
                	cmmCtrl.endProgress();
                }
            }
        });
    };

    /* Ajax File Data */
    var fn_ajax_file_data = function(callbackAjax, url, formObj, dataType, loading, sync)
    {
    	if (typeof dataType == "undefined") {
            dataType = "json";
        }

        if (typeof sync == "undefined") {
            sync = true;
        }

        if (formObj.data("submitFlag") != "Y")
		{
	        jQuery.ajax({
	            url : url,
	            type : "post",
	            timeout: 30000,
	            data : new FormData(formObj[0]),
	            dataType : dataType,
	            async: sync,
	            cache : false,
	            contentType: false,
	            processData: false,
	            beforeSend : function() {
	            	formObj.data("submitFlag", "Y");

	                if (loading) {
	                	cmmCtrl.startProgress();
	                }
	            },
	            success : function(data, status, xhr) {
	            	formObj.data("submitFlag", "N");

	                if (callbackAjax) {
	                    callbackAjax(data);
	                }
	            },
	            error : function(data, status, xhr) {
	            	formObj.data("submitFlag", "N");

	            	fn_ajax_error(data, status, xhr);
	            },
	            complete : function() {
	                if (loading) {
	                	cmmCtrl.endProgress();
	                }
	            }
	        });
		}
    };

    /* Ajax Error */
    var fn_ajax_error = function(data, status, xhr)
    {
    	var status = data.status;

    	if (status > 0)
    	{
    		if (status == 403)
    		{
    			if (confirm(msgCtrl.getMsg("confirm.co.login")))
    			{
    				cmmCtrl.loginPage();
    			}
    		}
        	else
        	{
        		alert(msgCtrl.getMsg("fail.act"));
        	}
    	}
    };

    /* List (페이징) */
    var fn_list = {
    	formId : "frmSearch",
		actUrl : "./list.ajax",
		listCnt : 10,
		notHisRplc : false,
		init : function (listCnt, notHisRplc){
			var pageIndex = jQuery.getURLParam("pageIndex");

			if (!pageIndex || isNaN(pageIndex))
			{
				pageIndex = 1;
			}

			jQuery("#pageIndex").val(pageIndex);

			if (typeof listCnt != "undefined")
			{
				this.listCnt = listCnt;
			}

			if (typeof notHisRplc != "undefined")
			{
				this.notHisRplc = notHisRplc;
			}

			this.set();
		},
		set : function(pageIndex){
			if (typeof pageIndex != "undefined")
			{
				jQuery("#pageIndex").val(pageIndex);
			}

			jQuery("#listCnt").val(this.listCnt);

			cmmCtrl.frmAjax(cmmCtrl.list.callback, this.actUrl, jQuery("#" + this.formId), "html");
		},
		callback : function(rtnHtml){
			if (typeof rtnHtml != "undefined")
			{
				var listAreaObj = jQuery("#listArea");

				listAreaObj.html(rtnHtml);

				var totalRecordCount = listAreaObj.children(":last").data("totalRecordCount");

				if (typeof totalRecordCount == "undefined")
				{
					totalRecordCount = 0;
				}

				// 상단 총 건수
				var allCountObj = jQuery(".total");

				if (allCountObj.length > 0)
				{
					allCountObj.find("span").text(totalRecordCount);
				}

				// 리스트 영역
				if (totalRecordCount > 0)
				{
					jQuery("#dataAreaY").show();
					jQuery("#dataAreaN").hide();
				}
				else
				{
					jQuery("#dataAreaY").hide();
					jQuery("#dataAreaN").show();
				}

				var totalPageCount = parseInt(listAreaObj.children(":last").data("totalPageCount"), 10);

				if (totalPageCount > 0)
				{
					jQuery("#pagination").paging({
						prnt	: this,
						current : jQuery("#pageIndex").val(),
						length  : 10,
						max 	: totalPageCount,
						href 	: "javascript:",
						onclick : function(e, pageIndex) {
							cmmCtrl.list.set(pageIndex);
						}
					});
				}
				else
				{
					jQuery("#pagination").empty();
				}

				if (!cmmCtrl.list.notHisRplc)
				{
					history.replaceState("", "", location.pathname + "?" + jQuery("#" + cmmCtrl.list.formId).strPam());
				}

				var trgtTop = jQuery("#trgtTop").offset().top;

				// 제품 검색어 (PSProductListCtrl.js) or 관심 제품
				if (location.pathname.indexOf("/product/") == 0)
				{
					fn_set_recent_search_term();
					fn_set_intrs_prdct_heart();

					setTimeout(function(){
						listAreaObj.find(".list").addClass("active").find(".img").each(function(index){
							jQuery(this).css("height", jQuery(this).width());
						});
					}, 100);
				}
				else
				{
					listAreaObj.find("img").load(function(){ subScript.imgResizeDev(); });

					trgtTop = trgtTop - 25;
				}

				if (jQuery(document).scrollTop() > 0)
				{
					jQuery(window).scrollTop(trgtTop);
				}
			}
		}
	};

    /* List (더보기) */
    var fn_more = {
    	formId : "frmSearch",
		actUrl : "./list.ajax",
		listCnt : 10,
		notHisRplc : false,
		isAppnd : null,
		init : function (listCnt, notHisRplc){
			var pageIndex = jQuery.getURLParam("pageIndex");

			if (!pageIndex || isNaN(pageIndex))
			{
				pageIndex = 1;
			}

			jQuery("#pageIndex").val(pageIndex);

			if (typeof listCnt != "undefined")
			{
				this.listCnt = listCnt;
			}

			if (typeof notHisRplc != "undefined")
			{
				this.notHisRplc = notHisRplc;
			}

			this.set();
		},
		set : function(pageIndex){
			var trgtObj = jQuery("#pageIndex");

			if (typeof pageIndex != "undefined")
			{
				trgtObj.val(pageIndex);
			}

			if (trgtObj.val() > 1)
			{
				this.isAppnd = true;
			}
			else
			{
				this.isAppnd = false;
			}

			jQuery("#listCnt").val(this.listCnt);

			cmmCtrl.frmAjax(cmmCtrl.more.callback, this.actUrl, jQuery("#" + this.formId), "html");
		},
		callback : function(rtnHtml){
			if (typeof rtnHtml != "undefined")
			{
				var listAreaObj = jQuery("#listArea");

				if (cmmCtrl.more.isAppnd)
				{
					listAreaObj.append(rtnHtml);
				}
				else
				{
					listAreaObj.html(rtnHtml);
				}

				var recordCount = listAreaObj.children().length;
				var totalRecordCount = listAreaObj.children(":last").data("totalRecordCount");

				if (typeof totalRecordCount == "undefined")
				{
					totalRecordCount = 0;
				}

				// 상단 총 건수
				var allCountObj = jQuery(".total");

				if (allCountObj.length > 0)
				{
					allCountObj.find("span").text(totalRecordCount);
				}

				// 리스트 영역
				if (totalRecordCount > 0)
				{
					jQuery("#dataAreaY").show();
					jQuery("#dataAreaN").hide();
				}
				else
				{
					jQuery("#dataAreaY").hide();
					jQuery("#dataAreaN").show();
				}

				// 더보기 (현재 건 수 / 총 건수)
				var btnMoreObj = jQuery("#btnMore");

				if (btnMoreObj.length > 0)
				{
					if (recordCount < totalRecordCount)
					{
						btnMoreObj.show().find("p.num").html("(<span>" + recordCount + "</span>/<span class=\"total\">" + totalRecordCount + "</span>)");
					}
					else
					{
						btnMoreObj.hide().find("p.num").html("(<span>" + recordCount + "</span>/<span class=\"total\">" + totalRecordCount + "</span>)");
					}
				}

				jQuery("#firstIndex").remove();

				if (!cmmCtrl.more.notHisRplc)
				{
					history.replaceState("", "", location.pathname + "?" + jQuery("#" + cmmCtrl.list.formId).strPam());
				}

				// 제품 검색어 (PSProductListCtrl.js) or 관심 제품
				if (location.pathname.indexOf("/product/") == 0)
				{
					fn_set_recent_search_term();
					fn_set_intrs_prdct_heart();

					setTimeout(function(){
						listAreaObj.find(".list").addClass("active").find(".img").each(function(index){
							jQuery(this).css("height", jQuery(this).width());
						});
					}, 100);
				}
				else
				{
					listAreaObj.find("img").load(function(){ subScript.imgResizeDev(); });
				}
			}
		}
	};

    /* Move Details */
    var fn_move_details = function(field, seq, url)
    {
    	var formObj = jQuery("#frmSearch");

    	formObj.find("input[name='" + field + "']").val(seq);

    	location.href = url + "?" + formObj.strPam();
    };

    /* Move Login Page */
    var fn_move_login_page = function()
    {
    	var loginPage = "/member/login/index.do", pathname = location.pathname;

    	if (pathname.indexOf("/member/") == 0)
    	{
    		location.href = loginPage;
    	}
    	else
    	{
    		location.href = loginPage + "?rtnUrl=" + encodeURIComponent(pathname + location.search);
    	}
    };

    /* Move Buy Authentication Page */
    var fn_move_login_check_page = function(trgtUrl)
    {
    	var moveFlag = true;

		if (jQuery("body").data("loginFlag") != "Y" && !confirm(msgCtrl.getMsg("confirm.co.login")))
		{
			moveFlag = false;
		}

		if (moveFlag)
		{
			location.href = trgtUrl;
		}
    };

    /* Move Integrated Search Page */
    var fn_move_intgr_srch_page = function(obj)
    {
    	var searchTerm = $.trim(jQuery(obj).prev("input[name='searchTerm']").val());

    	if (!searchTerm)
    	{
    		alert(msgCtrl.getMsg("fail.co.search.not_exist"));
    	}
    	else
    	{
    		location.href = "/integrated-search/index.do?searchTerm=" + encodeURIComponent(searchTerm);
    	}
    }

    /* Set Interest Product */
    var fn_set_intrs_prdct = function(trgtObj, quickFlag)
    {
    	var intrsPrdct = trgtObj.data("intrsPrdct");
    	var trgtAction = trgtObj.data("action");

    	if (jQuery("body").data("loginFlag") == "Y")
		{
    		cmmCtrl.paramAjax(function(data){
    			if (trgtAction == "insert")
    			{
    				trgtObj.data("action", "delete");

    				if (trgtObj.hasClass("heart"))
    				{
    					trgtObj.addClass("on");
    				}
    			}
    			else if (trgtAction == "delete")
    			{
    				trgtObj.data("action", "insert");

    				if (trgtObj.hasClass("heart"))
    				{
    					trgtObj.removeClass("on");
    				}
    			}
    		}, "/product/interest/" + trgtAction + ".ajax", { intrsPrdct : intrsPrdct, csrfKey : trgtObj.closest("form").data("csrfKey") });
		}
		else
		{
			var intrsPrdctJsonStr = localStorage.getItem("intrsPrdct");
			var intrsPrdctArr;

			if (intrsPrdctJsonStr == null)
			{
				intrsPrdctArr = new Array();
			}
			else
			{
				intrsPrdctArr = JSON.parse(intrsPrdctJsonStr);
			}

			intrsPrdctArr = intrsPrdctArr.filter(function(trgtObj){
				if (intrsPrdct != trgtObj.value) return trgtObj;
			});

			var paramArr = new Array();

			if (trgtAction == "insert")
			{
				trgtObj.data("action", "delete");

				if (trgtObj.hasClass("heart"))
				{
					trgtObj.addClass("on");
				}

				paramArr.push({ "name" : "intrsPrdct", "value" : intrsPrdct });

				if (intrsPrdctArr.length > 0)
				{
					paramArr = paramArr.concat(intrsPrdctArr);
				}
			}
			else if (trgtAction == "delete")
			{
				trgtObj.data("action", "insert");

				if (trgtObj.hasClass("heart"))
				{
					trgtObj.removeClass("on");
				}

				paramArr = paramArr.concat(intrsPrdctArr)
			}

			if (paramArr.length > 0)
			{
				localStorage.setItem("intrsPrdct", JSON.stringify(paramArr));
			}
			else
			{
				localStorage.removeItem("intrsPrdct");
			}
		}

    	if (quickFlag)
    	{
    		if (trgtAction == "insert")
			{
    			jQuery(".btnIntrsPrdct[data-intrs-prdct='" + intrsPrdct + "']").addClass("on").data("action", "delete");
			}
    		else if (trgtAction == "delete")
    		{
    			jQuery(".btnIntrsPrdct[data-intrs-prdct='" + intrsPrdct + "']").removeClass("on").data("action", "insert");
    		}
    	}
    };

    /* Set Interest Product Heart */
    var fn_set_intrs_prdct_heart = function()
    {
    	if (jQuery("body").data("loginFlag") != "Y")
		{
    		var intrsPrdctJsonStr = localStorage.getItem("intrsPrdct");

        	if (intrsPrdctJsonStr != null)
    		{
        		var intrsPrdctArr = JSON.parse(intrsPrdctJsonStr);

        		$.each(intrsPrdctArr, function(index, data){
        			jQuery(".btnIntrsPrdct[data-intrs-prdct='" + data.value + "']").addClass("on").data("action", "delete");
        		});
    		}
		}
    };

    /* Get Interest Product */
    var fn_get_intrs_prdct = function()
    {
    	if (jQuery("body").data("loginFlag") == "Y")
		{
    		cmmCtrl.bscAjax(fn_get_intrs_prdct_callback, "/product/interest/list.ajax", "html");
		}
    	else
    	{
    		var intrsPrdctJsonStr = localStorage.getItem("intrsPrdct");

    		if (intrsPrdctJsonStr != null)
    		{
    			cmmCtrl.paramAjax(fn_get_intrs_prdct_callback, "/product/interest/list.ajax", JSON.parse(intrsPrdctJsonStr), "html");
    		}
    		else
    		{
    			jQuery("#footerIntrsPrdctArea").closest(".like_div").hide();
    		}
    	}
    };

    /* Get Interest Product Callback */
    var fn_get_intrs_prdct_callback = function(rtnHtml)
    {
    	if (typeof rtnHtml != "undefined")
		{
			var trgtArea = jQuery("#footerIntrsPrdctArea");

			trgtArea.html(rtnHtml);

			if (trgtArea.children().length > 0)
			{
				trgtArea.closest(".like_div").show();

				var $moreviewslide = jQuery(".more_view_swp .swiper-container .swiper-slide");
				var likeDivSwiper = new Swiper(".more_view_swp .swiper-container", {
                    slidesPerView : 4,
                    spaceBetween : 40,
                    pagination : {
                    	el : ".swiper-pagination",
                    	clickable : true,
                    },
                    on : {
                        init : function(){
                            $moreviewslide.width(parseInt($moreviewslide.width()));
                            $moreviewslide.find(".img").height(parseInt($moreviewslide.width()));
                        },
                        resize : function(){
                            $moreviewslide.width(parseInt($moreviewslide.width()));
                            $moreviewslide.find(".img").height(parseInt($moreviewslide.width()));
                        }
                    },
                    breakpoints : {
                        1700 : {
                            slidesPerView : 3,
                            spaceBetween : 40,
                        },
                        1280 : {
                            slidesPerView : 3,
                            spaceBetween : 30,
                        },
                        1024:{
                            slidesPerView : 3,
                            spaceBetween : 10,
                        },
                        981:{
                            slidesPerView : 2,
                            spaceBetween : 20,
                        }
                    }
				});
			}
			else
			{
				trgtArea.closest(".like_div").hide();
			}
		}
    };

	/* Set Popup */
	var fn_set_popup = function(pUrl, pName, pSw, pSh)
	{
		//스크린의 크기
		var cw = screen.availWidth;
		var ch = screen.availHeight;
		var sw = pSw;
		var sh = pSh;
		var ml = (cw - sw) / 2;
		var mt = (ch - sh) / 2;

		window.open(pUrl, pName, "width="+sw+",height="+sh+",top="+mt+",left="+ml+",location=no,menubar=no,toolbar=no,scrollbars=yes,resizable=no,copyhistory=no");
	};

	/* Set Cookie */
	var fn_set_cookie = function(cName, cValue, cDay)
	{
	   var expire = new Date();

	   // 다음 날 00:00 (한국시간 기준)
	   expire = new Date(parseInt(expire.getTime() / 86400000) * 86400000 + 54000000);

	   if (expire > new Date())
	   {
		   cDay = cDay - 1;
	   }

	   expire.setDate(expire.getDate() + cDay);

	   var cookies = cName + "=" + escape(cValue) + "; path=/ ";

	   if (typeof cDay != "undefined")
	   {
		   cookies += ";expires=" + expire.toGMTString() + ";";
	   }

	   document.cookie = cookies;
	};

	/* Get Cookie */
	var fn_get_cookie = function(strName)
	{
		var rtn = "";
		var strCookieName = strName + "=";
		var objCookie = document.cookie;

		if (objCookie.length > 0)
		{
			var nBegin = objCookie.indexOf(strCookieName);

			if (nBegin < 0)
			{
				return rtn;
			}

			nBegin += strCookieName.length;

			var nEnd = objCookie.indexOf(";", nBegin);

			if (nEnd == -1)
			{
			    nEnd = objCookie.length;
			}
		}

		return unescape(objCookie.substring(nBegin, nEnd));
	};

	/* Check Maxlength */
	var fn_check_maxlength = function(obj)
	{
		var maxLength = obj.maxLength;

		if (obj.value.length > maxLength)
		{
			obj.value = obj.value.slice(0, maxLength);
		}
	};

	/* 회원정보 마스킹 (이름) - 이름 두번째 마스킹 : 홍*동 */
	var fn_masking_name = function(str){
		var rtnStr = cmmCtrl.nvl(str, "");

		if (rtnStr)
  		{
			var len = rtnStr.length;

			if (len > 1)
			{
				rtnStr = rtnStr.substring(0, 1) + "*" + rtnStr.substring(2, len);
			}
  		}

		return rtnStr;
	};

	/* 회원정보 마스킹 (휴대전화) - 전화번호 중간부분 전체 마스킹 : 010-****-1234 */
	var fn_masking_phone = function(str){
		var rtnStr = cmmCtrl.nvl(str, "");

		if (rtnStr)
  		{
			rtnStr = rtnStr.replace(/-/g, "");

			var len = rtnStr.length;

			if (len == 10 || len == 11)
			{
				if (len == 10)
  				{
					rtnStr = rtnStr.substring(0, 3) + "-***-" + rtnStr.substring(6, 10);
  				}
				else
				{
					rtnStr = rtnStr.substring(0, 3) + "-****-" + rtnStr.substring(7, 11);
				}
			}
			else
			{
				rtnStr = str
			}
  		}

		return rtnStr;
	};

	/* 회원정보 마스킹 (이메일) - 아이디 4번째 부터 끝까지 마스킹 : abc*****@easymedia.net */
	var fn_masking_email = function(str){
		var rtnStr = cmmCtrl.nvl(str, "");

		if (rtnStr)
  		{
			if (rtnStr.indexOf("@") > -1)
			{
				var emailArr = rtnStr.split("@");

				var len = emailArr[0].length;

				if (len > 3)
				{
					rtnStr = fn_rpad(emailArr[0].substring(0, 3), len, "*") + "@" + emailArr[1];
				}
			}
			else
			{
				var len = rtnStr.length;

				if (len > 3)
				{
					rtnStr = fn_rpad(rtnStr.substring(0, 3), len, "*");
				}
			}
  		}

		return rtnStr;
	};

	var fn_lpad = function(str, padLen, padStr){
		while(str.length < padLen)
		{
			str = padStr + str;
		}

		return str;
	};

	var fn_rpad = function(str, padLen, padStr){
		while(str.length < padLen)
		{
			str += padStr;
		}

		return str;
	};

	var fn_has_class_on = function(obj)
	{
		if($(obj).hasClass("on")){
			$(obj).removeClass("on");
			$(obj).next(".acco_cont").slideUp();
		}
		else {
			$(obj).addClass("on");
			$(obj).next(".acco_cont").slideDown();
		}
	}

	// 단일 파일 처리
	var fn_extn_check = function(obj, extns, maxSize)
	{
		var maxFileCnt = 1;
		var fileCnt = jQuery("#fileCopy").find("input").length;
		var fileObj = jQuery(obj).val(), isFile = true;

		if (!fileObj)
		{
			isFile = false;
		}
		else if (maxFileCnt <= fileCnt)
		{
			alert("첨부 가능한 파일 수를 초과하였습니다.");
			isFile = false;
		}
		else
		{
			var fileExtn = fileObj.substr(fileObj.lastIndexOf(".") + 1);

			if (extns.indexOf(fileExtn.toLowerCase()) < 0)
			{
				alert("지원하지 않는 파일확장자입니다.");
				isFile = false;
			}
			else
			{
				if (typeof obj.files != "undefined")
				{
					var fileSize = obj.files[0].size;
					var maxFileSize = maxSize * 1024 * 1024;

					if (fileSize > maxFileSize)
					{
						alert("파일 용량을 초과하였습니다. \n최대 파일 용량은 " + maxSize + "MB까지 입니다.");
						isFile = false;
					}
				}
			}
		}

		if (!isFile)
		{
			jQuery(obj).replaceWith(jQuery(obj).clone(true).val(""));
		}
		else
		{

			var fileValue = fileObj.split("\\");
			var fileName  = fileValue[fileValue.length-1];
			var copyTrgt  = jQuery("#fileCopy");
			var copyInput = jQuery(obj).clone(true);

			$(".fileDiv").append('<p class="up_file">' + fileName + '<a href="javascript:" class="del fileDel"></a></p>');

			jQuery(obj).attr("name", "atchFile").appendTo(copyTrgt);
			jQuery(".inputDiv").append(copyInput.val(""));
		}

	};

	// 단일 파일 삭제
	var fn_delete_file = function(obj)
	{
		jQuery(obj).closest("div").html("");
		jQuery("#fileCopy").find("input").remove();
	}

	// 브라우저 체크
	var fn_get_browser = function()
	{
		var _browser = "", agent = navigator.userAgent.toLowerCase(), name = navigator.appName;

		if(name === 'Microsoft Internet Explorer' || agent.indexOf('trident') > -1 || agent.indexOf('edge/') > -1) {
			_browser = 'ie';
		}
		else if(agent.indexOf('safari') > -1)
		{
			if(agent.indexOf('opr') > -1)
			{  // Opera
				_browser = 'opera';
			}
			else if(agent.indexOf('chrome') > -1)
			{  // Chrome
				_browser = 'chrome';
			}
			else
			{  // Safari
				_browser = 'safari';
			}
		}
		else if(agent.indexOf('firefox') > -1)
		{  // Firefox
			_browser = 'firefox';
	    }

		return _browser;
	}

	/* 체크박스 전체 선택 */
	jQuery(document).on("change", ".checkbox_all", function(){
		var trgtObj = jQuery(this).closest("div");

		if (jQuery(this).is(":checked"))
		{
			trgtObj.find(".checkbox_single").prop("checked", true);
		}
		else
		{
			trgtObj.find(".checkbox_single").prop("checked", false);
		}
	});

	/* 체크박스 단일 선택 */
	jQuery(document).on("change", ".checkbox_single", function(){
		var trgtObj = jQuery(this).closest("div");

		var allCbxCnt = trgtObj.find(".checkbox_single").length;
		var selCbxCnt = trgtObj.find(".checkbox_single:checked").length;

		if (allCbxCnt == selCbxCnt)
		{
			trgtObj.find(".checkbox_all").prop("checked", true);
		}
		else
		{
			trgtObj.find(".checkbox_all").prop("checked", false);
		}
	});

	/***
	 * 페이지 로드
	 ***/
	jQuery(document).ready(function(){
		// 카카오 Key 초기화
		var kakaoKey = jQuery("body").data("kakaoKey");

		if (typeof kakaoKey != "undefined")
		{
			Kakao.init(kakaoKey);
		}

		// 검색 Keyword Input Enter
		jQuery("input[name='q']").on("keydown", function(e){
			if (e.keyCode == 13)
			{
				e.preventDefault();

				var deviceType = jQuery("body").data("deviceType");

				if (deviceType == "mbl")
				{
					cmmCtrl.more.set(1);
				}
				else
				{
					cmmCtrl.list.set(1);
				}

				if (location.pathname.indexOf("/product/") > -1)
				{
					jQuery(this).removeClass("on").closest(".search_input").next(".search_info").slideUp(300);
				}
			}
		});

		// 통합검색 Keyword Input Enter
		jQuery("input[name='searchTerm']").on("keydown", function(e){
			if (e.keyCode == 13)
			{
				e.preventDefault();

				jQuery(this).parent().next().hide();

				jQuery(this).siblings(".btnIntgrSearch").click();
			}
		});

		// 통합검색 자동완성
		jQuery("input[name='searchTerm']").autocomplete({
			minLength : 1,
			source : function(request, response){
				var paramArr = [
					{ name : "topMenu", value : "침대" },
					{ name : "topMenu", value : "가구" },
					{ name : "topMenu", value : "스트레스리스" },
					{ name : "q", value : jQuery("input[name='searchTerm']:focus").val() },
					{ name : "perPage", value : 5 },
				];

				cmmCtrl.paramAjax(function(data){
					var rtnData = data.rtnData;

					if (typeof rtnData != "undefined" && rtnData.record_count > 0)
					{
						response(
	                    	$.map(rtnData.records.page, function(item){
	                        	return {
	                        		label : item.product_name,
									value : item.product_name
								}
							})
						);
					}
				}, "/integrated-search/autocomplete.ajax", paramArr);
			},
			search : function(event, ui){
				var trgtObj = jQuery("input[name='searchTerm']:focus");

				trgtObj.autocomplete("option", "appendTo", "#" + trgtObj.parent().next().attr("id"));
			},
			create : function(event, ui){
				jQuery(this).data("ui-autocomplete")._renderItem = function(ul, item){
	                return jQuery("<li />").append("<a href=\"javascript:\">" + item.value + "</a>").appendTo(ul.removeClass());
	            };
			},
			open : function(event, ui){
				jQuery("input[name='searchTerm']:focus").parent().next().show().find("ul").removeAttr("style");
		    },
		    select : function(event, ui){
		    	jQuery("input[name='searchTerm']:focus").val(ui.item.value).siblings(".btnIntgrSearch").click();
		    },
		    close : function(event, ui){
		    	jQuery("input[name='searchTerm']").parent().next().hide();
		    }
		}).on("focus keydown", function(){
			jQuery(this).autocomplete("search", jQuery(this).val());
		});

		// 팝업 오늘 하루 보지 않기
		jQuery(".todayClose").on("change", function(){
			var trgtId = jQuery(this).attr("id");

			if (trgtId)
			{
				if (jQuery(this).is(":checked"))
				{
					cmmCtrl.setCookie(trgtId, "false", 1);
				}
				else
				{
					cmmCtrl.setCookie(trgtId, "true", 1);
				}
			}
		});
	});

	// BFCache 체크
	window.onpageshow = function(event){
		history.scrollRestoration = "manual";

	    if (event.persisted || (window.performance && window.performance.navigation.type == 2))
	    {
			location.reload();
		}
	    else
	    {
	    	jQuery(".head_div.visual .vs").addClass("re_vs");
	    }
	};

	/* 파라미터 추출 */
    jQuery.extend({
    	getXssVal : function(targetValue){
			var returnValue = targetValue;

			if (returnValue)
			{
				returnValue = returnValue.replace(/&lt;/g, "<");
				returnValue = returnValue.replace(/&gt;/g, ">");
				returnValue = returnValue.replace(/&#34;/g, "\"");
				returnValue = returnValue.replace(/&#37;/g, "%");
				returnValue = returnValue.replace(/&#39;/g, "\'");
				returnValue = returnValue.replace(/&#46;/g, "\.");
			}

			return returnValue;
		},
        getURLParam : function(strParamName) {
            var strHref   = window.location.href;
            var cmpstring = strParamName + "=";
            var bFound    = false;
            var strReturn = "";

            if (strHref.indexOf("?") > -1)
            {
                var aQueryString = strHref.substr(strHref.indexOf("?") + 1).split("&");

                for (var iParam = 0, length = aQueryString.length; iParam < length; iParam++)
                {
                    if (aQueryString[iParam].substr(0, cmpstring.length) == cmpstring)
                    {
                        strReturn = aQueryString[iParam].split("=")[1];
                        bFound = true;
                        break;
                    }
                }
            }

            if (bFound == false)
            {
                return null;
            }

            return strReturn;
        },
        getURLParams: function(){
            return location.search
        }
    });

    /* clearForm */
	jQuery.fn.clearForm = function(){
		return this.each(function(){
			var type = this.type, tag = this.tagName.toLowerCase();

			if (tag === "form")
			{
				return jQuery(":input", this).clearForm();
		    }

			if (type === "text" || type === "password" || type === "hidden" || tag === "textarea")
			{
				this.value = "";
		    }
			else if (type === "checkbox" || type === "radio")
			{
				this.checked = false;
		    }
			else if (tag === "select")
			{
				this.selectedIndex = 0;
		    }
		});
	};

	/* form strPam */
    jQuery.fn.strPam = function(){
    	var formObj = this, tmpObj = { }, strPam = "";

    	$.each(formObj.serializeArray(), function(){
    		var $type = formObj.find("[name='" + this.name + "']").prop("type");

    		if (tmpObj[this.name])
         	{
    			if ($type == "checkbox")
    			{
    				tmpObj[this.name] = tmpObj[this.name] + "," + "|" + this.value + "|";
    			}
    			else
    			{
    				tmpObj[this.name] = tmpObj[this.name] + "," + this.value;
    			}
         	}
         	else
         	{
         		if ($type == "checkbox")
         		{
         			tmpObj[this.name] = "|" + this.value + "|";
         		}
         		else
         		{
         			tmpObj[this.name] = this.value;
         		}
         	}
    	});

    	$.each(Object.keys(tmpObj), function(){
    		if (strPam)
         	{
         		strPam += "&";
         	}

         	strPam += this + "=" + tmpObj[this];
    	});

    	return strPam;
    };

    return {
    	nvl : fn_replace_null,
    	startProgress : fn_start_progress,
    	endProgress : fn_end_progress,
        bscAjax : fn_ajax,
        frmAjax : fn_ajax_data,
        paramAjax : fn_ajax_param_data,
        fileFrmAjax : fn_ajax_file_data,
        list : fn_list,
        more : fn_more,
        details : fn_move_details,
        loginPage : fn_move_login_page,
        loginCheckPage : fn_move_login_check_page,
        intgrSrchPage : fn_move_intgr_srch_page,
        setIntrsPrdct : fn_set_intrs_prdct,
        setIntrsPrdctHeart : fn_set_intrs_prdct_heart,
        getIntrsPrdct : fn_get_intrs_prdct,
        setPopup : fn_set_popup,
        setCookie : fn_set_cookie,
        getCookie : fn_get_cookie,
        checkMaxlength : fn_check_maxlength,
        maskingName : fn_masking_name,
        maskingPhone : fn_masking_phone,
        maskingEmail : fn_masking_email,
        hasClassOn : fn_has_class_on,
        extnCheck : fn_extn_check,
        delFile : fn_delete_file,
        getBrowser : fn_get_browser
    }
}());